name: Project CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Assign Date
      run:
        BRANCH=$(echo "$GITHUB_REF" | awk -F'/' '{print $3}')
        echo "BRANCH=$(echo "$GITHUB_REF" | awk -F'/' '{print $3}')" >> $GITHUB_ENV && echo "DATE=$(date +'%d-%m-%Y')" >> $GITHUB_ENV

    - name: Checking
      run:
        echo $BRANCH 
        echo $DATE

    #- name: Assign Variable
     # run:
      #  echo "image_new=sharmanayan/springboot-images-new:$BRANCH-$DATE.1" >> $GITHUB_ENV   #poora image name ek saath define krdia

    - name: Checking final variable
      run:
        echo $image_new

    - name: Build with Maven
      run: mvn clean install

    #- name: Log in to Docker Hub
     # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      #with:
       #   username: ${{ secrets.DOCKER_USERNAME }}
        #  password: ${{ secrets.DOCKER_PASSWORD }}


    #- name: Build and push Docker image in adminApp
    #  uses: docker/build-push-action@v2  #ye action change krdia
    #  with:
    #      context: ./    #ye isliye kuki iss location p dockerfile hai
    #      file: Dockerfile  #docker file name
    #      push: true               #docker push krna h isliye
    #      tags: ${{ env.image_new }}  #yaha p tag

#    - name: Get Latest Version
#      id: get_version
#      run:
#        latest_tag=$(curl -s "https://registry.hub.docker.com/v2/repositories/sharmanayan/springboot-images-new/tags/" | jq -r '.results[].name')
#        echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
#      env:
#        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Debugging
      run: |
        IMAGE_NAME="sharmanayan/springboot-images-new"
        TAG_WITHOUT_BUILD_NUMBER="${{ env.BRANCH }}-${{ env.DATE }}"
        API_URL="https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/?page_size=10&ordering=last_updated"
        AUTH_HEADER="Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}"
        RESPONSE=$(curl --location --header "$AUTH_HEADER" "$API_URL")
      # Extract the latest tag matching the regex pattern
        LATEST_TAG=$(echo "$RESPONSE" | jq -r ".results[].name | select(. | test(\"$TAG_WITHOUT_BUILD_NUMBER\"))" | sort -rV | head -n 1)

      # regex_pattern='^main-\d{2}-\d{2}-\d{4}$'
        latest_tag=$(echo "$latest_tag" | grep -E "$regex_pattern" | sort -Vr | head -n 1)
        echo $LATEST_TAG
        new_numeric_part=$((latest_tag + 1))
        echo $new_numeric_part
        new_tag="sharmanayan/springboot-images-new:main-$(date +'%d-%m-%Y')-${new_numeric_part}"
        echo $new_tag
        echo "LAST_TAG=$new_tag" >> $GITHUB_ENV
      env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Cache Docker Buildx
#      uses: actions/cache@v2
#      with:
#        path: ~/.docker/buildx
#        key: ${{ runner.os }}-${{ matrix.java }}-${{ hashFiles('Dockerfile') }}-${{ hashFiles('**/*.xml') }}
#        restore-keys: ${{ runner.os }}-${{ matrix.java }}-${{ hashFiles('Dockerfile') }}-
#
#    - name: Restore Cache
#      uses: actions/cache@v2
#      with:
#        path: /path/to/your/cache/directory
#        key: my-cache-key

    - name: Build & Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: Dockerfile
        push: true
        tags: ${{ env.LAST_TAG }}